# coding: utf-8

"""
    Shipping API

    Shipping API Sample.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@pb.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from pitneybowes_shippingapi.configuration import Configuration


class RealTransactionDetailReport(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'adjustment_reason': 'str',
        'credit_card_fee': 'float',
        'custom_message1': 'str',
        'custom_message2': 'str',
        'description': 'str',
        'destination_address': 'str',
        'destination_country': 'str',
        'destination_zip': 'str',
        'developer_id': 'str',
        'developer_name': 'str',
        'developer_postage_payment_account_balance': 'float',
        'developer_postage_payment_method': 'str',
        'developer_rate_amount': 'float',
        'developer_rate_plan': 'str',
        'dimensional_weight_oz': 'float',
        'external_id': 'str',
        'international_country_price_group': 'str',
        'label_fee': 'str',
        'mail_class': 'str',
        'merchant_id': 'str',
        'merchant_name': 'str',
        'merchant_postage_account_payment_method': 'str',
        'merchant_rate': 'float',
        'merchant_rate_plan': 'str',
        'meter_number': 'str',
        'origin_zip': 'str',
        'origination_address': 'str',
        'package_height_in_inches': 'float',
        'package_length_in_inches': 'float',
        'package_type': 'str',
        'package_type_indicator': 'str',
        'package_width_in_inches': 'float',
        'parcel_tracking_number': 'str',
        'postage_deposit_amount': 'float',
        'print_status': 'str',
        'references': 'list[Parameter]',
        'refund_denial_reason': 'str',
        'refund_requestor': 'str',
        'refund_status': 'str',
        'shipment_id': 'str',
        'shipper_postage_payment_account_balance': 'float',
        'special_services': 'list[SpecialService]',
        'status': 'str',
        'transaction_date_time': 'datetime',
        'transaction_id': 'str',
        'transaction_type': 'str',
        'value_of_goods': 'float',
        'weight_in_ounces': 'int',
        'zone': 'str'
    }

    attribute_map = {
        'adjustment_reason': 'adjustmentReason',
        'credit_card_fee': 'creditCardFee',
        'custom_message1': 'customMessage1',
        'custom_message2': 'customMessage2',
        'description': 'description',
        'destination_address': 'destinationAddress',
        'destination_country': 'destinationCountry',
        'destination_zip': 'destinationZip',
        'developer_id': 'developerId',
        'developer_name': 'developerName',
        'developer_postage_payment_account_balance': 'developerPostagePaymentAccountBalance',
        'developer_postage_payment_method': 'developerPostagePaymentMethod',
        'developer_rate_amount': 'developerRateAmount',
        'developer_rate_plan': 'developerRatePlan',
        'dimensional_weight_oz': 'dimensionalWeightOz',
        'external_id': 'externalId',
        'international_country_price_group': 'internationalCountryPriceGroup',
        'label_fee': 'labelFee',
        'mail_class': 'mailClass',
        'merchant_id': 'merchantId',
        'merchant_name': 'merchantName',
        'merchant_postage_account_payment_method': 'merchantPostageAccountPaymentMethod',
        'merchant_rate': 'merchantRate',
        'merchant_rate_plan': 'merchantRatePlan',
        'meter_number': 'meterNumber',
        'origin_zip': 'originZip',
        'origination_address': 'originationAddress',
        'package_height_in_inches': 'packageHeightInInches',
        'package_length_in_inches': 'packageLengthInInches',
        'package_type': 'packageType',
        'package_type_indicator': 'packageTypeIndicator',
        'package_width_in_inches': 'packageWidthInInches',
        'parcel_tracking_number': 'parcelTrackingNumber',
        'postage_deposit_amount': 'postageDepositAmount',
        'print_status': 'printStatus',
        'references': 'references',
        'refund_denial_reason': 'refundDenialReason',
        'refund_requestor': 'refundRequestor',
        'refund_status': 'refundStatus',
        'shipment_id': 'shipmentId',
        'shipper_postage_payment_account_balance': 'shipperPostagePaymentAccountBalance',
        'special_services': 'specialServices',
        'status': 'status',
        'transaction_date_time': 'transactionDateTime',
        'transaction_id': 'transactionId',
        'transaction_type': 'transactionType',
        'value_of_goods': 'valueOfGoods',
        'weight_in_ounces': 'weightInOunces',
        'zone': 'zone'
    }

    def __init__(self, adjustment_reason=None, credit_card_fee=None, custom_message1=None, custom_message2=None, description=None, destination_address=None, destination_country=None, destination_zip=None, developer_id=None, developer_name=None, developer_postage_payment_account_balance=None, developer_postage_payment_method=None, developer_rate_amount=None, developer_rate_plan=None, dimensional_weight_oz=None, external_id=None, international_country_price_group=None, label_fee=None, mail_class=None, merchant_id=None, merchant_name=None, merchant_postage_account_payment_method=None, merchant_rate=None, merchant_rate_plan=None, meter_number=None, origin_zip=None, origination_address=None, package_height_in_inches=None, package_length_in_inches=None, package_type=None, package_type_indicator=None, package_width_in_inches=None, parcel_tracking_number=None, postage_deposit_amount=None, print_status=None, references=None, refund_denial_reason=None, refund_requestor=None, refund_status=None, shipment_id=None, shipper_postage_payment_account_balance=None, special_services=None, status=None, transaction_date_time=None, transaction_id=None, transaction_type=None, value_of_goods=None, weight_in_ounces=None, zone=None, local_vars_configuration=None):  # noqa: E501
        """RealTransactionDetailReport - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._adjustment_reason = None
        self._credit_card_fee = None
        self._custom_message1 = None
        self._custom_message2 = None
        self._description = None
        self._destination_address = None
        self._destination_country = None
        self._destination_zip = None
        self._developer_id = None
        self._developer_name = None
        self._developer_postage_payment_account_balance = None
        self._developer_postage_payment_method = None
        self._developer_rate_amount = None
        self._developer_rate_plan = None
        self._dimensional_weight_oz = None
        self._external_id = None
        self._international_country_price_group = None
        self._label_fee = None
        self._mail_class = None
        self._merchant_id = None
        self._merchant_name = None
        self._merchant_postage_account_payment_method = None
        self._merchant_rate = None
        self._merchant_rate_plan = None
        self._meter_number = None
        self._origin_zip = None
        self._origination_address = None
        self._package_height_in_inches = None
        self._package_length_in_inches = None
        self._package_type = None
        self._package_type_indicator = None
        self._package_width_in_inches = None
        self._parcel_tracking_number = None
        self._postage_deposit_amount = None
        self._print_status = None
        self._references = None
        self._refund_denial_reason = None
        self._refund_requestor = None
        self._refund_status = None
        self._shipment_id = None
        self._shipper_postage_payment_account_balance = None
        self._special_services = None
        self._status = None
        self._transaction_date_time = None
        self._transaction_id = None
        self._transaction_type = None
        self._value_of_goods = None
        self._weight_in_ounces = None
        self._zone = None
        self.discriminator = None

        if adjustment_reason is not None:
            self.adjustment_reason = adjustment_reason
        if credit_card_fee is not None:
            self.credit_card_fee = credit_card_fee
        if custom_message1 is not None:
            self.custom_message1 = custom_message1
        if custom_message2 is not None:
            self.custom_message2 = custom_message2
        if description is not None:
            self.description = description
        if destination_address is not None:
            self.destination_address = destination_address
        if destination_country is not None:
            self.destination_country = destination_country
        if destination_zip is not None:
            self.destination_zip = destination_zip
        if developer_id is not None:
            self.developer_id = developer_id
        if developer_name is not None:
            self.developer_name = developer_name
        if developer_postage_payment_account_balance is not None:
            self.developer_postage_payment_account_balance = developer_postage_payment_account_balance
        if developer_postage_payment_method is not None:
            self.developer_postage_payment_method = developer_postage_payment_method
        if developer_rate_amount is not None:
            self.developer_rate_amount = developer_rate_amount
        if developer_rate_plan is not None:
            self.developer_rate_plan = developer_rate_plan
        if dimensional_weight_oz is not None:
            self.dimensional_weight_oz = dimensional_weight_oz
        if external_id is not None:
            self.external_id = external_id
        if international_country_price_group is not None:
            self.international_country_price_group = international_country_price_group
        if label_fee is not None:
            self.label_fee = label_fee
        if mail_class is not None:
            self.mail_class = mail_class
        if merchant_id is not None:
            self.merchant_id = merchant_id
        if merchant_name is not None:
            self.merchant_name = merchant_name
        if merchant_postage_account_payment_method is not None:
            self.merchant_postage_account_payment_method = merchant_postage_account_payment_method
        if merchant_rate is not None:
            self.merchant_rate = merchant_rate
        if merchant_rate_plan is not None:
            self.merchant_rate_plan = merchant_rate_plan
        if meter_number is not None:
            self.meter_number = meter_number
        if origin_zip is not None:
            self.origin_zip = origin_zip
        if origination_address is not None:
            self.origination_address = origination_address
        if package_height_in_inches is not None:
            self.package_height_in_inches = package_height_in_inches
        if package_length_in_inches is not None:
            self.package_length_in_inches = package_length_in_inches
        if package_type is not None:
            self.package_type = package_type
        if package_type_indicator is not None:
            self.package_type_indicator = package_type_indicator
        if package_width_in_inches is not None:
            self.package_width_in_inches = package_width_in_inches
        if parcel_tracking_number is not None:
            self.parcel_tracking_number = parcel_tracking_number
        if postage_deposit_amount is not None:
            self.postage_deposit_amount = postage_deposit_amount
        if print_status is not None:
            self.print_status = print_status
        if references is not None:
            self.references = references
        if refund_denial_reason is not None:
            self.refund_denial_reason = refund_denial_reason
        if refund_requestor is not None:
            self.refund_requestor = refund_requestor
        if refund_status is not None:
            self.refund_status = refund_status
        if shipment_id is not None:
            self.shipment_id = shipment_id
        if shipper_postage_payment_account_balance is not None:
            self.shipper_postage_payment_account_balance = shipper_postage_payment_account_balance
        if special_services is not None:
            self.special_services = special_services
        if status is not None:
            self.status = status
        if transaction_date_time is not None:
            self.transaction_date_time = transaction_date_time
        if transaction_id is not None:
            self.transaction_id = transaction_id
        if transaction_type is not None:
            self.transaction_type = transaction_type
        if value_of_goods is not None:
            self.value_of_goods = value_of_goods
        if weight_in_ounces is not None:
            self.weight_in_ounces = weight_in_ounces
        if zone is not None:
            self.zone = zone

    @property
    def adjustment_reason(self):
        """Gets the adjustment_reason of this RealTransactionDetailReport.  # noqa: E501


        :return: The adjustment_reason of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._adjustment_reason

    @adjustment_reason.setter
    def adjustment_reason(self, adjustment_reason):
        """Sets the adjustment_reason of this RealTransactionDetailReport.


        :param adjustment_reason: The adjustment_reason of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._adjustment_reason = adjustment_reason

    @property
    def credit_card_fee(self):
        """Gets the credit_card_fee of this RealTransactionDetailReport.  # noqa: E501


        :return: The credit_card_fee of this RealTransactionDetailReport.  # noqa: E501
        :rtype: float
        """
        return self._credit_card_fee

    @credit_card_fee.setter
    def credit_card_fee(self, credit_card_fee):
        """Sets the credit_card_fee of this RealTransactionDetailReport.


        :param credit_card_fee: The credit_card_fee of this RealTransactionDetailReport.  # noqa: E501
        :type: float
        """

        self._credit_card_fee = credit_card_fee

    @property
    def custom_message1(self):
        """Gets the custom_message1 of this RealTransactionDetailReport.  # noqa: E501


        :return: The custom_message1 of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._custom_message1

    @custom_message1.setter
    def custom_message1(self, custom_message1):
        """Sets the custom_message1 of this RealTransactionDetailReport.


        :param custom_message1: The custom_message1 of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._custom_message1 = custom_message1

    @property
    def custom_message2(self):
        """Gets the custom_message2 of this RealTransactionDetailReport.  # noqa: E501


        :return: The custom_message2 of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._custom_message2

    @custom_message2.setter
    def custom_message2(self, custom_message2):
        """Sets the custom_message2 of this RealTransactionDetailReport.


        :param custom_message2: The custom_message2 of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._custom_message2 = custom_message2

    @property
    def description(self):
        """Gets the description of this RealTransactionDetailReport.  # noqa: E501


        :return: The description of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RealTransactionDetailReport.


        :param description: The description of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def destination_address(self):
        """Gets the destination_address of this RealTransactionDetailReport.  # noqa: E501


        :return: The destination_address of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._destination_address

    @destination_address.setter
    def destination_address(self, destination_address):
        """Sets the destination_address of this RealTransactionDetailReport.


        :param destination_address: The destination_address of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._destination_address = destination_address

    @property
    def destination_country(self):
        """Gets the destination_country of this RealTransactionDetailReport.  # noqa: E501


        :return: The destination_country of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._destination_country

    @destination_country.setter
    def destination_country(self, destination_country):
        """Sets the destination_country of this RealTransactionDetailReport.


        :param destination_country: The destination_country of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._destination_country = destination_country

    @property
    def destination_zip(self):
        """Gets the destination_zip of this RealTransactionDetailReport.  # noqa: E501


        :return: The destination_zip of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._destination_zip

    @destination_zip.setter
    def destination_zip(self, destination_zip):
        """Sets the destination_zip of this RealTransactionDetailReport.


        :param destination_zip: The destination_zip of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._destination_zip = destination_zip

    @property
    def developer_id(self):
        """Gets the developer_id of this RealTransactionDetailReport.  # noqa: E501


        :return: The developer_id of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._developer_id

    @developer_id.setter
    def developer_id(self, developer_id):
        """Sets the developer_id of this RealTransactionDetailReport.


        :param developer_id: The developer_id of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._developer_id = developer_id

    @property
    def developer_name(self):
        """Gets the developer_name of this RealTransactionDetailReport.  # noqa: E501


        :return: The developer_name of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._developer_name

    @developer_name.setter
    def developer_name(self, developer_name):
        """Sets the developer_name of this RealTransactionDetailReport.


        :param developer_name: The developer_name of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._developer_name = developer_name

    @property
    def developer_postage_payment_account_balance(self):
        """Gets the developer_postage_payment_account_balance of this RealTransactionDetailReport.  # noqa: E501


        :return: The developer_postage_payment_account_balance of this RealTransactionDetailReport.  # noqa: E501
        :rtype: float
        """
        return self._developer_postage_payment_account_balance

    @developer_postage_payment_account_balance.setter
    def developer_postage_payment_account_balance(self, developer_postage_payment_account_balance):
        """Sets the developer_postage_payment_account_balance of this RealTransactionDetailReport.


        :param developer_postage_payment_account_balance: The developer_postage_payment_account_balance of this RealTransactionDetailReport.  # noqa: E501
        :type: float
        """

        self._developer_postage_payment_account_balance = developer_postage_payment_account_balance

    @property
    def developer_postage_payment_method(self):
        """Gets the developer_postage_payment_method of this RealTransactionDetailReport.  # noqa: E501


        :return: The developer_postage_payment_method of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._developer_postage_payment_method

    @developer_postage_payment_method.setter
    def developer_postage_payment_method(self, developer_postage_payment_method):
        """Sets the developer_postage_payment_method of this RealTransactionDetailReport.


        :param developer_postage_payment_method: The developer_postage_payment_method of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._developer_postage_payment_method = developer_postage_payment_method

    @property
    def developer_rate_amount(self):
        """Gets the developer_rate_amount of this RealTransactionDetailReport.  # noqa: E501


        :return: The developer_rate_amount of this RealTransactionDetailReport.  # noqa: E501
        :rtype: float
        """
        return self._developer_rate_amount

    @developer_rate_amount.setter
    def developer_rate_amount(self, developer_rate_amount):
        """Sets the developer_rate_amount of this RealTransactionDetailReport.


        :param developer_rate_amount: The developer_rate_amount of this RealTransactionDetailReport.  # noqa: E501
        :type: float
        """

        self._developer_rate_amount = developer_rate_amount

    @property
    def developer_rate_plan(self):
        """Gets the developer_rate_plan of this RealTransactionDetailReport.  # noqa: E501


        :return: The developer_rate_plan of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._developer_rate_plan

    @developer_rate_plan.setter
    def developer_rate_plan(self, developer_rate_plan):
        """Sets the developer_rate_plan of this RealTransactionDetailReport.


        :param developer_rate_plan: The developer_rate_plan of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._developer_rate_plan = developer_rate_plan

    @property
    def dimensional_weight_oz(self):
        """Gets the dimensional_weight_oz of this RealTransactionDetailReport.  # noqa: E501


        :return: The dimensional_weight_oz of this RealTransactionDetailReport.  # noqa: E501
        :rtype: float
        """
        return self._dimensional_weight_oz

    @dimensional_weight_oz.setter
    def dimensional_weight_oz(self, dimensional_weight_oz):
        """Sets the dimensional_weight_oz of this RealTransactionDetailReport.


        :param dimensional_weight_oz: The dimensional_weight_oz of this RealTransactionDetailReport.  # noqa: E501
        :type: float
        """

        self._dimensional_weight_oz = dimensional_weight_oz

    @property
    def external_id(self):
        """Gets the external_id of this RealTransactionDetailReport.  # noqa: E501


        :return: The external_id of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this RealTransactionDetailReport.


        :param external_id: The external_id of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._external_id = external_id

    @property
    def international_country_price_group(self):
        """Gets the international_country_price_group of this RealTransactionDetailReport.  # noqa: E501


        :return: The international_country_price_group of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._international_country_price_group

    @international_country_price_group.setter
    def international_country_price_group(self, international_country_price_group):
        """Sets the international_country_price_group of this RealTransactionDetailReport.


        :param international_country_price_group: The international_country_price_group of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._international_country_price_group = international_country_price_group

    @property
    def label_fee(self):
        """Gets the label_fee of this RealTransactionDetailReport.  # noqa: E501


        :return: The label_fee of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._label_fee

    @label_fee.setter
    def label_fee(self, label_fee):
        """Sets the label_fee of this RealTransactionDetailReport.


        :param label_fee: The label_fee of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._label_fee = label_fee

    @property
    def mail_class(self):
        """Gets the mail_class of this RealTransactionDetailReport.  # noqa: E501


        :return: The mail_class of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._mail_class

    @mail_class.setter
    def mail_class(self, mail_class):
        """Sets the mail_class of this RealTransactionDetailReport.


        :param mail_class: The mail_class of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._mail_class = mail_class

    @property
    def merchant_id(self):
        """Gets the merchant_id of this RealTransactionDetailReport.  # noqa: E501


        :return: The merchant_id of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._merchant_id

    @merchant_id.setter
    def merchant_id(self, merchant_id):
        """Sets the merchant_id of this RealTransactionDetailReport.


        :param merchant_id: The merchant_id of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._merchant_id = merchant_id

    @property
    def merchant_name(self):
        """Gets the merchant_name of this RealTransactionDetailReport.  # noqa: E501


        :return: The merchant_name of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._merchant_name

    @merchant_name.setter
    def merchant_name(self, merchant_name):
        """Sets the merchant_name of this RealTransactionDetailReport.


        :param merchant_name: The merchant_name of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._merchant_name = merchant_name

    @property
    def merchant_postage_account_payment_method(self):
        """Gets the merchant_postage_account_payment_method of this RealTransactionDetailReport.  # noqa: E501


        :return: The merchant_postage_account_payment_method of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._merchant_postage_account_payment_method

    @merchant_postage_account_payment_method.setter
    def merchant_postage_account_payment_method(self, merchant_postage_account_payment_method):
        """Sets the merchant_postage_account_payment_method of this RealTransactionDetailReport.


        :param merchant_postage_account_payment_method: The merchant_postage_account_payment_method of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._merchant_postage_account_payment_method = merchant_postage_account_payment_method

    @property
    def merchant_rate(self):
        """Gets the merchant_rate of this RealTransactionDetailReport.  # noqa: E501


        :return: The merchant_rate of this RealTransactionDetailReport.  # noqa: E501
        :rtype: float
        """
        return self._merchant_rate

    @merchant_rate.setter
    def merchant_rate(self, merchant_rate):
        """Sets the merchant_rate of this RealTransactionDetailReport.


        :param merchant_rate: The merchant_rate of this RealTransactionDetailReport.  # noqa: E501
        :type: float
        """

        self._merchant_rate = merchant_rate

    @property
    def merchant_rate_plan(self):
        """Gets the merchant_rate_plan of this RealTransactionDetailReport.  # noqa: E501


        :return: The merchant_rate_plan of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._merchant_rate_plan

    @merchant_rate_plan.setter
    def merchant_rate_plan(self, merchant_rate_plan):
        """Sets the merchant_rate_plan of this RealTransactionDetailReport.


        :param merchant_rate_plan: The merchant_rate_plan of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._merchant_rate_plan = merchant_rate_plan

    @property
    def meter_number(self):
        """Gets the meter_number of this RealTransactionDetailReport.  # noqa: E501


        :return: The meter_number of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._meter_number

    @meter_number.setter
    def meter_number(self, meter_number):
        """Sets the meter_number of this RealTransactionDetailReport.


        :param meter_number: The meter_number of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._meter_number = meter_number

    @property
    def origin_zip(self):
        """Gets the origin_zip of this RealTransactionDetailReport.  # noqa: E501


        :return: The origin_zip of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._origin_zip

    @origin_zip.setter
    def origin_zip(self, origin_zip):
        """Sets the origin_zip of this RealTransactionDetailReport.


        :param origin_zip: The origin_zip of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._origin_zip = origin_zip

    @property
    def origination_address(self):
        """Gets the origination_address of this RealTransactionDetailReport.  # noqa: E501


        :return: The origination_address of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._origination_address

    @origination_address.setter
    def origination_address(self, origination_address):
        """Sets the origination_address of this RealTransactionDetailReport.


        :param origination_address: The origination_address of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._origination_address = origination_address

    @property
    def package_height_in_inches(self):
        """Gets the package_height_in_inches of this RealTransactionDetailReport.  # noqa: E501


        :return: The package_height_in_inches of this RealTransactionDetailReport.  # noqa: E501
        :rtype: float
        """
        return self._package_height_in_inches

    @package_height_in_inches.setter
    def package_height_in_inches(self, package_height_in_inches):
        """Sets the package_height_in_inches of this RealTransactionDetailReport.


        :param package_height_in_inches: The package_height_in_inches of this RealTransactionDetailReport.  # noqa: E501
        :type: float
        """

        self._package_height_in_inches = package_height_in_inches

    @property
    def package_length_in_inches(self):
        """Gets the package_length_in_inches of this RealTransactionDetailReport.  # noqa: E501


        :return: The package_length_in_inches of this RealTransactionDetailReport.  # noqa: E501
        :rtype: float
        """
        return self._package_length_in_inches

    @package_length_in_inches.setter
    def package_length_in_inches(self, package_length_in_inches):
        """Sets the package_length_in_inches of this RealTransactionDetailReport.


        :param package_length_in_inches: The package_length_in_inches of this RealTransactionDetailReport.  # noqa: E501
        :type: float
        """

        self._package_length_in_inches = package_length_in_inches

    @property
    def package_type(self):
        """Gets the package_type of this RealTransactionDetailReport.  # noqa: E501


        :return: The package_type of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._package_type

    @package_type.setter
    def package_type(self, package_type):
        """Sets the package_type of this RealTransactionDetailReport.


        :param package_type: The package_type of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._package_type = package_type

    @property
    def package_type_indicator(self):
        """Gets the package_type_indicator of this RealTransactionDetailReport.  # noqa: E501


        :return: The package_type_indicator of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._package_type_indicator

    @package_type_indicator.setter
    def package_type_indicator(self, package_type_indicator):
        """Sets the package_type_indicator of this RealTransactionDetailReport.


        :param package_type_indicator: The package_type_indicator of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._package_type_indicator = package_type_indicator

    @property
    def package_width_in_inches(self):
        """Gets the package_width_in_inches of this RealTransactionDetailReport.  # noqa: E501


        :return: The package_width_in_inches of this RealTransactionDetailReport.  # noqa: E501
        :rtype: float
        """
        return self._package_width_in_inches

    @package_width_in_inches.setter
    def package_width_in_inches(self, package_width_in_inches):
        """Sets the package_width_in_inches of this RealTransactionDetailReport.


        :param package_width_in_inches: The package_width_in_inches of this RealTransactionDetailReport.  # noqa: E501
        :type: float
        """

        self._package_width_in_inches = package_width_in_inches

    @property
    def parcel_tracking_number(self):
        """Gets the parcel_tracking_number of this RealTransactionDetailReport.  # noqa: E501


        :return: The parcel_tracking_number of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._parcel_tracking_number

    @parcel_tracking_number.setter
    def parcel_tracking_number(self, parcel_tracking_number):
        """Sets the parcel_tracking_number of this RealTransactionDetailReport.


        :param parcel_tracking_number: The parcel_tracking_number of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._parcel_tracking_number = parcel_tracking_number

    @property
    def postage_deposit_amount(self):
        """Gets the postage_deposit_amount of this RealTransactionDetailReport.  # noqa: E501


        :return: The postage_deposit_amount of this RealTransactionDetailReport.  # noqa: E501
        :rtype: float
        """
        return self._postage_deposit_amount

    @postage_deposit_amount.setter
    def postage_deposit_amount(self, postage_deposit_amount):
        """Sets the postage_deposit_amount of this RealTransactionDetailReport.


        :param postage_deposit_amount: The postage_deposit_amount of this RealTransactionDetailReport.  # noqa: E501
        :type: float
        """

        self._postage_deposit_amount = postage_deposit_amount

    @property
    def print_status(self):
        """Gets the print_status of this RealTransactionDetailReport.  # noqa: E501


        :return: The print_status of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._print_status

    @print_status.setter
    def print_status(self, print_status):
        """Sets the print_status of this RealTransactionDetailReport.


        :param print_status: The print_status of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._print_status = print_status

    @property
    def references(self):
        """Gets the references of this RealTransactionDetailReport.  # noqa: E501


        :return: The references of this RealTransactionDetailReport.  # noqa: E501
        :rtype: list[Parameter]
        """
        return self._references

    @references.setter
    def references(self, references):
        """Sets the references of this RealTransactionDetailReport.


        :param references: The references of this RealTransactionDetailReport.  # noqa: E501
        :type: list[Parameter]
        """

        self._references = references

    @property
    def refund_denial_reason(self):
        """Gets the refund_denial_reason of this RealTransactionDetailReport.  # noqa: E501


        :return: The refund_denial_reason of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._refund_denial_reason

    @refund_denial_reason.setter
    def refund_denial_reason(self, refund_denial_reason):
        """Sets the refund_denial_reason of this RealTransactionDetailReport.


        :param refund_denial_reason: The refund_denial_reason of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._refund_denial_reason = refund_denial_reason

    @property
    def refund_requestor(self):
        """Gets the refund_requestor of this RealTransactionDetailReport.  # noqa: E501


        :return: The refund_requestor of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._refund_requestor

    @refund_requestor.setter
    def refund_requestor(self, refund_requestor):
        """Sets the refund_requestor of this RealTransactionDetailReport.


        :param refund_requestor: The refund_requestor of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._refund_requestor = refund_requestor

    @property
    def refund_status(self):
        """Gets the refund_status of this RealTransactionDetailReport.  # noqa: E501


        :return: The refund_status of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._refund_status

    @refund_status.setter
    def refund_status(self, refund_status):
        """Sets the refund_status of this RealTransactionDetailReport.


        :param refund_status: The refund_status of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._refund_status = refund_status

    @property
    def shipment_id(self):
        """Gets the shipment_id of this RealTransactionDetailReport.  # noqa: E501


        :return: The shipment_id of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._shipment_id

    @shipment_id.setter
    def shipment_id(self, shipment_id):
        """Sets the shipment_id of this RealTransactionDetailReport.


        :param shipment_id: The shipment_id of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._shipment_id = shipment_id

    @property
    def shipper_postage_payment_account_balance(self):
        """Gets the shipper_postage_payment_account_balance of this RealTransactionDetailReport.  # noqa: E501


        :return: The shipper_postage_payment_account_balance of this RealTransactionDetailReport.  # noqa: E501
        :rtype: float
        """
        return self._shipper_postage_payment_account_balance

    @shipper_postage_payment_account_balance.setter
    def shipper_postage_payment_account_balance(self, shipper_postage_payment_account_balance):
        """Sets the shipper_postage_payment_account_balance of this RealTransactionDetailReport.


        :param shipper_postage_payment_account_balance: The shipper_postage_payment_account_balance of this RealTransactionDetailReport.  # noqa: E501
        :type: float
        """

        self._shipper_postage_payment_account_balance = shipper_postage_payment_account_balance

    @property
    def special_services(self):
        """Gets the special_services of this RealTransactionDetailReport.  # noqa: E501


        :return: The special_services of this RealTransactionDetailReport.  # noqa: E501
        :rtype: list[SpecialService]
        """
        return self._special_services

    @special_services.setter
    def special_services(self, special_services):
        """Sets the special_services of this RealTransactionDetailReport.


        :param special_services: The special_services of this RealTransactionDetailReport.  # noqa: E501
        :type: list[SpecialService]
        """

        self._special_services = special_services

    @property
    def status(self):
        """Gets the status of this RealTransactionDetailReport.  # noqa: E501


        :return: The status of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RealTransactionDetailReport.


        :param status: The status of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def transaction_date_time(self):
        """Gets the transaction_date_time of this RealTransactionDetailReport.  # noqa: E501


        :return: The transaction_date_time of this RealTransactionDetailReport.  # noqa: E501
        :rtype: datetime
        """
        return self._transaction_date_time

    @transaction_date_time.setter
    def transaction_date_time(self, transaction_date_time):
        """Sets the transaction_date_time of this RealTransactionDetailReport.


        :param transaction_date_time: The transaction_date_time of this RealTransactionDetailReport.  # noqa: E501
        :type: datetime
        """

        self._transaction_date_time = transaction_date_time

    @property
    def transaction_id(self):
        """Gets the transaction_id of this RealTransactionDetailReport.  # noqa: E501


        :return: The transaction_id of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._transaction_id

    @transaction_id.setter
    def transaction_id(self, transaction_id):
        """Sets the transaction_id of this RealTransactionDetailReport.


        :param transaction_id: The transaction_id of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._transaction_id = transaction_id

    @property
    def transaction_type(self):
        """Gets the transaction_type of this RealTransactionDetailReport.  # noqa: E501


        :return: The transaction_type of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._transaction_type

    @transaction_type.setter
    def transaction_type(self, transaction_type):
        """Sets the transaction_type of this RealTransactionDetailReport.


        :param transaction_type: The transaction_type of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._transaction_type = transaction_type

    @property
    def value_of_goods(self):
        """Gets the value_of_goods of this RealTransactionDetailReport.  # noqa: E501


        :return: The value_of_goods of this RealTransactionDetailReport.  # noqa: E501
        :rtype: float
        """
        return self._value_of_goods

    @value_of_goods.setter
    def value_of_goods(self, value_of_goods):
        """Sets the value_of_goods of this RealTransactionDetailReport.


        :param value_of_goods: The value_of_goods of this RealTransactionDetailReport.  # noqa: E501
        :type: float
        """

        self._value_of_goods = value_of_goods

    @property
    def weight_in_ounces(self):
        """Gets the weight_in_ounces of this RealTransactionDetailReport.  # noqa: E501


        :return: The weight_in_ounces of this RealTransactionDetailReport.  # noqa: E501
        :rtype: int
        """
        return self._weight_in_ounces

    @weight_in_ounces.setter
    def weight_in_ounces(self, weight_in_ounces):
        """Sets the weight_in_ounces of this RealTransactionDetailReport.


        :param weight_in_ounces: The weight_in_ounces of this RealTransactionDetailReport.  # noqa: E501
        :type: int
        """

        self._weight_in_ounces = weight_in_ounces

    @property
    def zone(self):
        """Gets the zone of this RealTransactionDetailReport.  # noqa: E501


        :return: The zone of this RealTransactionDetailReport.  # noqa: E501
        :rtype: str
        """
        return self._zone

    @zone.setter
    def zone(self, zone):
        """Sets the zone of this RealTransactionDetailReport.


        :param zone: The zone of this RealTransactionDetailReport.  # noqa: E501
        :type: str
        """

        self._zone = zone

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RealTransactionDetailReport):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, RealTransactionDetailReport):
            return True

        return self.to_dict() != other.to_dict()
