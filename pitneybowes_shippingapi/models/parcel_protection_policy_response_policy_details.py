# coding: utf-8

"""
    Shipping API

    Shipping API Sample.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@pb.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from pitneybowes_shippingapi.configuration import Configuration


class ParcelProtectionPolicyResponsePolicyDetails(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'policy_id': 'str',
        'policy_date': 'str',
        'policy_status': 'str',
        'claim_status': 'str',
        'claim_status_update_date': 'str',
        'value_of_goods': 'float',
        'insurance_value': 'float',
        'premium_value': 'float',
        'base_premium': 'float',
        'technology_fee': 'float',
        'currency_code': 'str',
        'mail_class': 'str',
        'mail_class_option': 'str'
    }

    attribute_map = {
        'policy_id': 'policyId',
        'policy_date': 'policyDate',
        'policy_status': 'policyStatus',
        'claim_status': 'claimStatus',
        'claim_status_update_date': 'claimStatusUpdateDate',
        'value_of_goods': 'valueOfGoods',
        'insurance_value': 'insuranceValue',
        'premium_value': 'premiumValue',
        'base_premium': 'basePremium',
        'technology_fee': 'technologyFee',
        'currency_code': 'currencyCode',
        'mail_class': 'mailClass',
        'mail_class_option': 'mailClassOption'
    }

    def __init__(self, policy_id=None, policy_date=None, policy_status=None, claim_status=None, claim_status_update_date=None, value_of_goods=None, insurance_value=None, premium_value=None, base_premium=None, technology_fee=None, currency_code=None, mail_class=None, mail_class_option=None, local_vars_configuration=None):  # noqa: E501
        """ParcelProtectionPolicyResponsePolicyDetails - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._policy_id = None
        self._policy_date = None
        self._policy_status = None
        self._claim_status = None
        self._claim_status_update_date = None
        self._value_of_goods = None
        self._insurance_value = None
        self._premium_value = None
        self._base_premium = None
        self._technology_fee = None
        self._currency_code = None
        self._mail_class = None
        self._mail_class_option = None
        self.discriminator = None

        if policy_id is not None:
            self.policy_id = policy_id
        if policy_date is not None:
            self.policy_date = policy_date
        if policy_status is not None:
            self.policy_status = policy_status
        self.claim_status = claim_status
        if claim_status_update_date is not None:
            self.claim_status_update_date = claim_status_update_date
        if value_of_goods is not None:
            self.value_of_goods = value_of_goods
        if insurance_value is not None:
            self.insurance_value = insurance_value
        if premium_value is not None:
            self.premium_value = premium_value
        if base_premium is not None:
            self.base_premium = base_premium
        if technology_fee is not None:
            self.technology_fee = technology_fee
        if currency_code is not None:
            self.currency_code = currency_code
        if mail_class is not None:
            self.mail_class = mail_class
        if mail_class_option is not None:
            self.mail_class_option = mail_class_option

    @property
    def policy_id(self):
        """Gets the policy_id of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501


        :return: The policy_id of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :rtype: str
        """
        return self._policy_id

    @policy_id.setter
    def policy_id(self, policy_id):
        """Sets the policy_id of this ParcelProtectionPolicyResponsePolicyDetails.


        :param policy_id: The policy_id of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :type: str
        """

        self._policy_id = policy_id

    @property
    def policy_date(self):
        """Gets the policy_date of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501


        :return: The policy_date of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :rtype: str
        """
        return self._policy_date

    @policy_date.setter
    def policy_date(self, policy_date):
        """Sets the policy_date of this ParcelProtectionPolicyResponsePolicyDetails.


        :param policy_date: The policy_date of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :type: str
        """

        self._policy_date = policy_date

    @property
    def policy_status(self):
        """Gets the policy_status of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501


        :return: The policy_status of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :rtype: str
        """
        return self._policy_status

    @policy_status.setter
    def policy_status(self, policy_status):
        """Sets the policy_status of this ParcelProtectionPolicyResponsePolicyDetails.


        :param policy_status: The policy_status of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :type: str
        """

        self._policy_status = policy_status

    @property
    def claim_status(self):
        """Gets the claim_status of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501


        :return: The claim_status of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :rtype: str
        """
        return self._claim_status

    @claim_status.setter
    def claim_status(self, claim_status):
        """Sets the claim_status of this ParcelProtectionPolicyResponsePolicyDetails.


        :param claim_status: The claim_status of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :type: str
        """

        self._claim_status = claim_status

    @property
    def claim_status_update_date(self):
        """Gets the claim_status_update_date of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501


        :return: The claim_status_update_date of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :rtype: str
        """
        return self._claim_status_update_date

    @claim_status_update_date.setter
    def claim_status_update_date(self, claim_status_update_date):
        """Sets the claim_status_update_date of this ParcelProtectionPolicyResponsePolicyDetails.


        :param claim_status_update_date: The claim_status_update_date of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :type: str
        """

        self._claim_status_update_date = claim_status_update_date

    @property
    def value_of_goods(self):
        """Gets the value_of_goods of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501


        :return: The value_of_goods of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :rtype: float
        """
        return self._value_of_goods

    @value_of_goods.setter
    def value_of_goods(self, value_of_goods):
        """Sets the value_of_goods of this ParcelProtectionPolicyResponsePolicyDetails.


        :param value_of_goods: The value_of_goods of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :type: float
        """

        self._value_of_goods = value_of_goods

    @property
    def insurance_value(self):
        """Gets the insurance_value of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501


        :return: The insurance_value of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :rtype: float
        """
        return self._insurance_value

    @insurance_value.setter
    def insurance_value(self, insurance_value):
        """Sets the insurance_value of this ParcelProtectionPolicyResponsePolicyDetails.


        :param insurance_value: The insurance_value of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :type: float
        """

        self._insurance_value = insurance_value

    @property
    def premium_value(self):
        """Gets the premium_value of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501


        :return: The premium_value of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :rtype: float
        """
        return self._premium_value

    @premium_value.setter
    def premium_value(self, premium_value):
        """Sets the premium_value of this ParcelProtectionPolicyResponsePolicyDetails.


        :param premium_value: The premium_value of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :type: float
        """

        self._premium_value = premium_value

    @property
    def base_premium(self):
        """Gets the base_premium of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501


        :return: The base_premium of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :rtype: float
        """
        return self._base_premium

    @base_premium.setter
    def base_premium(self, base_premium):
        """Sets the base_premium of this ParcelProtectionPolicyResponsePolicyDetails.


        :param base_premium: The base_premium of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :type: float
        """

        self._base_premium = base_premium

    @property
    def technology_fee(self):
        """Gets the technology_fee of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501


        :return: The technology_fee of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :rtype: float
        """
        return self._technology_fee

    @technology_fee.setter
    def technology_fee(self, technology_fee):
        """Sets the technology_fee of this ParcelProtectionPolicyResponsePolicyDetails.


        :param technology_fee: The technology_fee of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :type: float
        """

        self._technology_fee = technology_fee

    @property
    def currency_code(self):
        """Gets the currency_code of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501


        :return: The currency_code of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this ParcelProtectionPolicyResponsePolicyDetails.


        :param currency_code: The currency_code of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :type: str
        """

        self._currency_code = currency_code

    @property
    def mail_class(self):
        """Gets the mail_class of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501


        :return: The mail_class of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :rtype: str
        """
        return self._mail_class

    @mail_class.setter
    def mail_class(self, mail_class):
        """Sets the mail_class of this ParcelProtectionPolicyResponsePolicyDetails.


        :param mail_class: The mail_class of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :type: str
        """

        self._mail_class = mail_class

    @property
    def mail_class_option(self):
        """Gets the mail_class_option of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501


        :return: The mail_class_option of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :rtype: str
        """
        return self._mail_class_option

    @mail_class_option.setter
    def mail_class_option(self, mail_class_option):
        """Sets the mail_class_option of this ParcelProtectionPolicyResponsePolicyDetails.


        :param mail_class_option: The mail_class_option of this ParcelProtectionPolicyResponsePolicyDetails.  # noqa: E501
        :type: str
        """

        self._mail_class_option = mail_class_option

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ParcelProtectionPolicyResponsePolicyDetails):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ParcelProtectionPolicyResponsePolicyDetails):
            return True

        return self.to_dict() != other.to_dict()
