# coding: utf-8

"""
    Shipping API

    Shipping API Sample.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@pb.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import pbshipping
from pbshipping.models.carrier_rule import CarrierRule  # noqa: E501
from pbshipping.rest import ApiException

class TestCarrierRule(unittest.TestCase):
    """CarrierRule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CarrierRule
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = pbshipping.models.carrier_rule.CarrierRule()  # noqa: E501
        if include_optional :
            return CarrierRule(
                service_id = 'EM', 
                branded_name = '0', 
                parcel_type_rules = [
                    pbshipping.models.parcel_type_rules.ParcelTypeRules(
                        parcel_type = 'FLAT', 
                        branded_name = '0', 
                        rate_type_id = '0', 
                        rate_type_branded_name = '0', 
                        trackable = 'TRACKABLE', 
                        special_services_rule = [
                            pbshipping.models.special_services_rule.SpecialServicesRule(
                                special_service_id = 'ADSIG', 
                                branded_name = '0', 
                                category_id = '0', 
                                category_name = '0', 
                                input_parameter_rules = [
                                    pbshipping.models.services_parameter_rule.ServicesParameterRule(
                                        name = '0', 
                                        branded_name = '0', 
                                        required = True, 
                                        min_value = 1.337, 
                                        max_value = 1.337, 
                                        free_value = 1.337, 
                                        format = '0', 
                                        description = '0', )
                                    ], 
                                prerequisite_rules = [
                                    pbshipping.models.prerequisite_rules.PrerequisiteRules(
                                        special_service_codes = 'ADSIG', 
                                        min_input_value = 1.337, )
                                    ], 
                                incompatible_special_services = 'ADSIG', )
                            ], 
                        weight_rules = [
                            pbshipping.models.weight_rules.WeightRules(
                                required = True, 
                                unit_of_measurement = '0', 
                                min_weight = 1.337, 
                                max_weight = 1.337, )
                            ], 
                        dimension_rules = [
                            pbshipping.models.dimension_rules.DimensionRules(
                                required = True, 
                                unit_of_measurement = '0', 
                                min_parcel_dimensions = pbshipping.models.dimension_rules_min_parcel_dimensions.DimensionRules_minParcelDimensions(
                                    length = 1.337, 
                                    width = 1.337, 
                                    height = 1.337, 
                                    unit_of_measurement = '0', ), 
                                max_parcel_dimensions = pbshipping.models.dimension_rules_max_parcel_dimensions.DimensionRules_maxParcelDimensions(
                                    length = 56, 
                                    width = 1.337, 
                                    height = 56, 
                                    unit_of_measurement = '0', ), 
                                min_length_plus_girth = 56, 
                                max_length_plus_girth = 56, )
                            ], 
                        suggested_trackable_special_service_id = 'ADSIG', )
                    ], 
                parameters = [
                    '0'
                    ]
            )
        else :
            return CarrierRule(
        )

    def testCarrierRule(self):
        """Test CarrierRule"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
