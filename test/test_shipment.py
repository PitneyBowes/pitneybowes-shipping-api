# coding: utf-8

"""
    Shipping API

    Shipping API Sample.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@pb.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import pitneybowes_shippingapi
from pitneybowes_shippingapi.models.shipment import Shipment  # noqa: E501
from pitneybowes_shippingapi.rest import ApiException

class TestShipment(unittest.TestCase):
    """Shipment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Shipment
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = pitneybowes_shippingapi.models.shipment.Shipment()  # noqa: E501
        if include_optional :
            return Shipment(
                additional_addresses = [
                    pitneybowes_shippingapi.models.additional_address.AdditionalAddress(
                        address = pitneybowes_shippingapi.models.address.Address(
                            address_lines = [
                                '0'
                                ], 
                            carrier_route = '0', 
                            city_town = '0', 
                            company = '0', 
                            country_code = '0', 
                            delivery_point = '0', 
                            email = '0', 
                            name = '0', 
                            phone = '0', 
                            postal_code = '0', 
                            residential = True, 
                            state_province = '0', 
                            status = 'PARSED', 
                            tax_id = '0', 
                            tax_id_type = 'EIN', ), 
                        address_type = 'HOLD', )
                    ], 
                alt_return_address = pitneybowes_shippingapi.models.address.Address(
                    address_lines = [
                        '0'
                        ], 
                    carrier_route = '0', 
                    city_town = '0', 
                    company = '0', 
                    country_code = '0', 
                    delivery_point = '0', 
                    email = '0', 
                    name = '0', 
                    phone = '0', 
                    postal_code = '0', 
                    residential = True, 
                    state_province = '0', 
                    status = 'PARSED', 
                    tax_id = '0', 
                    tax_id_type = 'EIN', ), 
                carrier_payments = [
                    pitneybowes_shippingapi.models.carrier_payment.CarrierPayment(
                        account_number = '0', 
                        country_code = '0', 
                        party = 'BILL_RECEIVER', 
                        postal_code = '0', 
                        type_of_charge = 'TRANSPORTATION_CHARGES', )
                    ], 
                customs = pitneybowes_shippingapi.models.customs.Customs(
                    customs_info = pitneybowes_shippingapi.models.customs_info.CustomsInfo(
                        eelpfc = '0', 
                        blanket_end_date = '0', 
                        blanket_start_date = '0', 
                        certificate_number = '0', 
                        comments = '0', 
                        currency_code = '0', 
                        customs_declared_value = 1.337, 
                        declaration_statement = '0', 
                        freight_charge = 1.337, 
                        from_customs_reference = '0', 
                        handling_costs = 1.337, 
                        importer_customs_reference = '0', 
                        insured_amount = 1.337, 
                        insured_number = '0', 
                        invoice_number = '0', 
                        license_number = '0', 
                        other_charge = 1.337, 
                        other_description = '0', 
                        other_type = 'COMMISSIONS', 
                        packing_costs = 1.337, 
                        producer_specification = 'MULTIPLE_SPECIFIED', 
                        reason_for_export = 'GIFT', 
                        reason_for_export_explanation = '0', 
                        sdr_value = 1.337, 
                        shipping_document_type = 'NAFTA', 
                        signature_contact = pitneybowes_shippingapi.models.address.Address(
                            address_lines = [
                                '0'
                                ], 
                            carrier_route = '0', 
                            city_town = '0', 
                            company = '0', 
                            country_code = '0', 
                            delivery_point = '0', 
                            email = '0', 
                            name = '0', 
                            phone = '0', 
                            postal_code = '0', 
                            residential = True, 
                            state_province = '0', 
                            status = 'PARSED', 
                            tax_id = '0', 
                            tax_id_type = 'EIN', ), 
                        terms_of_sale = '0', ), 
                    customs_items = [
                        pitneybowes_shippingapi.models.customs_item.CustomsItem(
                            description = '0', 
                            h_s_tariff_code = '0', 
                            net_cost_method = 'NO_NET_COST', 
                            origin_country_code = '0', 
                            origin_state_province = '0', 
                            preference_criterion = 'A', 
                            producer_address = pitneybowes_shippingapi.models.address.Address(
                                carrier_route = '0', 
                                city_town = '0', 
                                company = '0', 
                                country_code = '0', 
                                delivery_point = '0', 
                                email = '0', 
                                name = '0', 
                                phone = '0', 
                                postal_code = '0', 
                                residential = True, 
                                state_province = '0', 
                                status = 'PARSED', 
                                tax_id = '0', 
                                tax_id_type = 'EIN', ), 
                            producer_determination = 'NO_1', 
                            producer_id = '0', 
                            quantity = 56, 
                            quantity_uom = '0', 
                            unit_price = 1.337, 
                            unit_weight = pitneybowes_shippingapi.models.parcel_weight.ParcelWeight(
                                weight = 1.337, 
                                unit_of_measurement = 'GM', ), )
                        ], ), 
                documents = [
                    pitneybowes_shippingapi.models.document.Document(
                        content_type = 'URL', 
                        contents = '0', 
                        doc_tab = [
                            pitneybowes_shippingapi.models.doc_tab_item.DocTabItem(
                                display_name = '0', 
                                name = '0', 
                                value = '0', )
                            ], 
                        file_format = 'PDF', 
                        pages = [
                            pitneybowes_shippingapi.models.document_page.DocumentPage(
                                contents = '0', )
                            ], 
                        print_dialog_option = 'NO_PRINT_DIALOG', 
                        resolution = 'DPI_300', 
                        size = 'DOC_2X7', 
                        type = '0', )
                    ], 
                from_address = pitneybowes_shippingapi.models.address.Address(
                    address_lines = [
                        '0'
                        ], 
                    carrier_route = '0', 
                    city_town = '0', 
                    company = '0', 
                    country_code = '0', 
                    delivery_point = '0', 
                    email = '0', 
                    name = '0', 
                    phone = '0', 
                    postal_code = '0', 
                    residential = True, 
                    state_province = '0', 
                    status = 'PARSED', 
                    tax_id = '0', 
                    tax_id_type = 'EIN', ), 
                hazmat_details = pitneybowes_shippingapi.models.hazmat_details.HazmatDetails(
                    battery_details = pitneybowes_shippingapi.models.battery_details.BatteryDetails(
                        battery_material = '0', 
                        battery_packaging = '0', 
                        regulatory = '0', ), 
                    commodity_type = '0', 
                    container_count = 56, 
                    container_details = [
                        pitneybowes_shippingapi.models.container_details.ContainerDetails(
                            commodity_info = [
                                pitneybowes_shippingapi.models.commodity_info.CommodityInfo(
                                    cargo_air_craft = True, 
                                    hazard_class = '0', 
                                    infectious_substance_contact = pitneybowes_shippingapi.models.infectious_substance_contact.InfectiousSubstanceContact(
                                        company_name = '0', 
                                        contact_id = '0', 
                                        email_address = '0', 
                                        person_name = '0', 
                                        phone_number = '0', ), 
                                    inner_receptacles_quantity = 56, 
                                    inner_receptacles_quantity_uom = '0', 
                                    packaging_group = '0', 
                                    packaging_instructions = '0', 
                                    percentage = 1.337, 
                                    proper_shipping_name = '0', 
                                    quantity = 56, 
                                    quantity_uom = '0', 
                                    radio_activity_detail = pitneybowes_shippingapi.models.radio_activity_detail.RadioActivityDetail(
                                        criticality_safety_index = 1.337, 
                                        radio_active_parcel_dimension = pitneybowes_shippingapi.models.radio_active_parcel_dimension.RadioActiveParcelDimension(
                                            uom = 'CM', 
                                            height = 1.337, 
                                            length = 1.337, 
                                            width = 1.337, ), 
                                        surface_reading = 1.337, 
                                        transport_index = 1.337, ), 
                                    radio_nuclide_detail = pitneybowes_shippingapi.models.radio_nuclide_detail.RadioNuclideDetail(
                                        chemical_form = '0', 
                                        expected_package_reportable_quantity = True, 
                                        physical_form = '0', 
                                        radio_nuclide = '0', 
                                        radio_nuclide_activity_uom = '0', 
                                        radio_nuclide_activity_value = 1.337, ), 
                                    reportable_quantity = True, 
                                    technical_name = '0', 
                                    un_id = '0', )
                                ], 
                            container_type = '0', 
                            packaging_type = '0', )
                        ], 
                    emergency_contact_number = '0', 
                    hazmat_document_type = '0', 
                    identical_containers = True, 
                    offeror = '0', 
                    packaging_option = '0', 
                    signatory = pitneybowes_shippingapi.models.signatory.Signatory(
                        name = '0', 
                        place = '0', 
                        title = '0', ), ), 
                parcel = pitneybowes_shippingapi.models.parcel.Parcel(
                    dimension = pitneybowes_shippingapi.models.parcel_dimension.ParcelDimension(
                        length = 1.337, 
                        height = 1.337, 
                        width = 1.337, 
                        unit_of_measurement = 'CM', 
                        irregular_parcel_girth = 1.337, ), 
                    weight = pitneybowes_shippingapi.models.parcel_weight.ParcelWeight(), 
                    value_of_goods = 1.337, 
                    currency_code = '0', ), 
                parcel_tracking_number = '0', 
                rates = [
                    pitneybowes_shippingapi.models.rate.Rate(
                        alternate_base_charge = 1.337, 
                        alternate_total_charge = 1.337, 
                        base_charge = 1.337, 
                        base_charge_taxes = [
                            pitneybowes_shippingapi.models.tax.Tax(
                                display_name = '0', 
                                name = '0', 
                                tax_amount = 1.337, 
                                tax_rate = 1.337, )
                            ], 
                        carrier = 'USPS', 
                        currency_code = '0', 
                        delivery_commitment = pitneybowes_shippingapi.models.delivery_commitment.DeliveryCommitment(
                            additional_details = '0', 
                            estimated_delivery_date_time = '0', 
                            guarantee = '0', 
                            max_estimated_number_of_days = '0', 
                            min_estimated_number_of_days = '0', ), 
                        destination_zone = 1.337, 
                        dimensional_weight = pitneybowes_shippingapi.models.parcel_weight.ParcelWeight(
                            weight = 1.337, 
                            unit_of_measurement = 'GM', ), 
                        discounts = [
                            pitneybowes_shippingapi.models.discount.Discount(
                                discount_amount = 1.337, 
                                name = '0', )
                            ], 
                        induction_postal_code = '0', 
                        parcel_type = 'FLAT', 
                        rate_type_id = '0', 
                        service_id = 'EM', 
                        special_services = [
                            pitneybowes_shippingapi.models.special_service.SpecialService(
                                fee = 1.337, 
                                input_parameters = [
                                    pitneybowes_shippingapi.models.parameter.Parameter(
                                        name = '0', 
                                        value = '0', )
                                    ], 
                                special_service_id = '0', )
                            ], 
                        surcharges = [
                            pitneybowes_shippingapi.models.surcharge.Surcharge(
                                fee = 1.337, 
                                name = '0', )
                            ], 
                        total_carrier_charge = 1.337, 
                        total_tax_amount = 1.337, )
                    ], 
                references = [
                    pitneybowes_shippingapi.models.parameter.Parameter(
                        name = '0', 
                        value = '0', )
                    ], 
                shipment_id = '0', 
                shipment_options = [
                    pitneybowes_shippingapi.models.parameter.Parameter(
                        name = '0', 
                        value = '0', )
                    ], 
                shipment_type = 'OUTBOUND', 
                sold_to_address = pitneybowes_shippingapi.models.address.Address(
                    address_lines = [
                        '0'
                        ], 
                    carrier_route = '0', 
                    city_town = '0', 
                    company = '0', 
                    country_code = '0', 
                    delivery_point = '0', 
                    email = '0', 
                    name = '0', 
                    phone = '0', 
                    postal_code = '0', 
                    residential = True, 
                    state_province = '0', 
                    status = 'PARSED', 
                    tax_id = '0', 
                    tax_id_type = 'EIN', ), 
                to_address = pitneybowes_shippingapi.models.address.Address(
                    address_lines = [
                        '0'
                        ], 
                    carrier_route = '0', 
                    city_town = '0', 
                    company = '0', 
                    country_code = '0', 
                    delivery_point = '0', 
                    email = '0', 
                    name = '0', 
                    phone = '0', 
                    postal_code = '0', 
                    residential = True, 
                    state_province = '0', 
                    status = 'PARSED', 
                    tax_id = '0', 
                    tax_id_type = 'EIN', )
            )
        else :
            return Shipment(
                from_address = pitneybowes_shippingapi.models.address.Address(
                    address_lines = [
                        '0'
                        ], 
                    carrier_route = '0', 
                    city_town = '0', 
                    company = '0', 
                    country_code = '0', 
                    delivery_point = '0', 
                    email = '0', 
                    name = '0', 
                    phone = '0', 
                    postal_code = '0', 
                    residential = True, 
                    state_province = '0', 
                    status = 'PARSED', 
                    tax_id = '0', 
                    tax_id_type = 'EIN', ),
                parcel = pitneybowes_shippingapi.models.parcel.Parcel(
                    dimension = pitneybowes_shippingapi.models.parcel_dimension.ParcelDimension(
                        length = 1.337, 
                        height = 1.337, 
                        width = 1.337, 
                        unit_of_measurement = 'CM', 
                        irregular_parcel_girth = 1.337, ), 
                    weight = pitneybowes_shippingapi.models.parcel_weight.ParcelWeight(), 
                    value_of_goods = 1.337, 
                    currency_code = '0', ),
                rates = [
                    pitneybowes_shippingapi.models.rate.Rate(
                        alternate_base_charge = 1.337, 
                        alternate_total_charge = 1.337, 
                        base_charge = 1.337, 
                        base_charge_taxes = [
                            pitneybowes_shippingapi.models.tax.Tax(
                                display_name = '0', 
                                name = '0', 
                                tax_amount = 1.337, 
                                tax_rate = 1.337, )
                            ], 
                        carrier = 'USPS', 
                        currency_code = '0', 
                        delivery_commitment = pitneybowes_shippingapi.models.delivery_commitment.DeliveryCommitment(
                            additional_details = '0', 
                            estimated_delivery_date_time = '0', 
                            guarantee = '0', 
                            max_estimated_number_of_days = '0', 
                            min_estimated_number_of_days = '0', ), 
                        destination_zone = 1.337, 
                        dimensional_weight = pitneybowes_shippingapi.models.parcel_weight.ParcelWeight(
                            weight = 1.337, 
                            unit_of_measurement = 'GM', ), 
                        discounts = [
                            pitneybowes_shippingapi.models.discount.Discount(
                                discount_amount = 1.337, 
                                name = '0', )
                            ], 
                        induction_postal_code = '0', 
                        parcel_type = 'FLAT', 
                        rate_type_id = '0', 
                        service_id = 'EM', 
                        special_services = [
                            pitneybowes_shippingapi.models.special_service.SpecialService(
                                fee = 1.337, 
                                input_parameters = [
                                    pitneybowes_shippingapi.models.parameter.Parameter(
                                        name = '0', 
                                        value = '0', )
                                    ], 
                                special_service_id = '0', )
                            ], 
                        surcharges = [
                            pitneybowes_shippingapi.models.surcharge.Surcharge(
                                fee = 1.337, 
                                name = '0', )
                            ], 
                        total_carrier_charge = 1.337, 
                        total_tax_amount = 1.337, )
                    ],
                to_address = pitneybowes_shippingapi.models.address.Address(
                    address_lines = [
                        '0'
                        ], 
                    carrier_route = '0', 
                    city_town = '0', 
                    company = '0', 
                    country_code = '0', 
                    delivery_point = '0', 
                    email = '0', 
                    name = '0', 
                    phone = '0', 
                    postal_code = '0', 
                    residential = True, 
                    state_province = '0', 
                    status = 'PARSED', 
                    tax_id = '0', 
                    tax_id_type = 'EIN', ),
        )

    def testShipment(self):
        """Test Shipment"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
