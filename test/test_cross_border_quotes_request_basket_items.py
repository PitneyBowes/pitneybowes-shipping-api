# coding: utf-8

"""
    Shipping API

    Shipping API Sample.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@pb.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import pbshipping
from pbshipping.models.cross_border_quotes_request_basket_items import CrossBorderQuotesRequestBasketItems  # noqa: E501
from pbshipping.rest import ApiException

class TestCrossBorderQuotesRequestBasketItems(unittest.TestCase):
    """CrossBorderQuotesRequestBasketItems unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CrossBorderQuotesRequestBasketItems
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = pbshipping.models.cross_border_quotes_request_basket_items.CrossBorderQuotesRequestBasketItems()  # noqa: E501
        if include_optional :
            return CrossBorderQuotesRequestBasketItems(
                item_id = '0', 
                categories = [
                    pbshipping.models.cross_border_quotes_request_categories.CrossBorderQuotesRequest_categories(
                        category_code = '0', 
                        descriptions = [
                            pbshipping.models.cross_border_quotes_request_descriptions.CrossBorderQuotesRequest_descriptions(
                                locale = '0', 
                                name = '0', 
                                parents_names = [
                                    '0'
                                    ], )
                            ], 
                        parent_category_code = '0', 
                        url = '0', )
                    ], 
                description = '0', 
                long_description = '0', 
                unit_weight = pbshipping.models.cross_border_quotes_request_unit_weight.CrossBorderQuotesRequest_unitWeight(
                    weight = 56, 
                    unit_of_measurement = '0', ), 
                item_dimension = pbshipping.models.cross_border_quotes_request_item_dimension.CrossBorderQuotesRequest_itemDimension(
                    length = 56, 
                    height = 1.337, 
                    width = 56, 
                    unit_of_measurement = '0', ), 
                url = '0', 
                quantity = 56, 
                unit_price = 1.337, 
                origin_country_code = '0', 
                parent_identifier = '0', 
                child_identifier = '0', 
                kit = '0', 
                kit_identifier = '0', 
                kit_quantity = '0', 
                manufacturer = '0', 
                brand = '0', 
                eccn = '0', 
                enabled = True, 
                pricing = pbshipping.models.cross_border_quotes_request_pricing.CrossBorderQuotesRequest_pricing(
                    price = 56, 
                    cod_price = [
                        pbshipping.models.cross_border_quotes_request_pricing_cod_price.CrossBorderQuotesRequest_pricing_codPrice(
                            price = 56, 
                            cod = '0', 
                            includes_duty = True, 
                            includes_taxes = True, )
                        ], 
                    dutiable_value = 56, ), 
                h_s_tariff_code = '0', 
                h_s_tariff_code_country = '0', 
                identifiers = [
                    pbshipping.models.cross_border_quotes_request_identifiers.CrossBorderQuotesRequest_identifiers(
                        number = '0', 
                        source = '0', )
                    ], 
                image_urls = [
                    '0'
                    ], 
                ships_alone = True, 
                attributes = [
                    pbshipping.models.cross_border_quotes_request_attributes.CrossBorderQuotesRequest_attributes(
                        type = '0', 
                        name = '0', 
                        value = '0', )
                    ], 
                hazmats = [
                    '0'
                    ]
            )
        else :
            return CrossBorderQuotesRequestBasketItems(
        )

    def testCrossBorderQuotesRequestBasketItems(self):
        """Test CrossBorderQuotesRequestBasketItems"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
