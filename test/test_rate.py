# coding: utf-8

"""
    Shipping API

    Shipping API Sample.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@pb.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import pbshipping
from pbshipping.models.rate import Rate  # noqa: E501
from pbshipping.rest import ApiException

class TestRate(unittest.TestCase):
    """Rate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Rate
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = pbshipping.models.rate.Rate()  # noqa: E501
        if include_optional :
            return Rate(
                alternate_base_charge = 1.337, 
                alternate_total_charge = 1.337, 
                base_charge = 1.337, 
                base_charge_taxes = [
                    pbshipping.models.tax.Tax(
                        display_name = '0', 
                        name = '0', 
                        tax_amount = 1.337, 
                        tax_rate = 1.337, )
                    ], 
                carrier = 'USPS', 
                currency_code = '0', 
                delivery_commitment = pbshipping.models.delivery_commitment.DeliveryCommitment(
                    additional_details = '0', 
                    estimated_delivery_date_time = '0', 
                    guarantee = '0', 
                    max_estimated_number_of_days = '0', 
                    min_estimated_number_of_days = '0', ), 
                destination_zone = 1.337, 
                dimensional_weight = pbshipping.models.parcel_weight.ParcelWeight(
                    weight = 1.337, 
                    unit_of_measurement = 'GM', ), 
                discounts = [
                    pbshipping.models.discount.Discount(
                        discount_amount = 1.337, 
                        name = '0', )
                    ], 
                induction_postal_code = '0', 
                parcel_type = 'FLAT', 
                rate_type_id = '0', 
                service_id = 'EM', 
                special_services = [
                    pbshipping.models.special_service.SpecialService(
                        fee = 1.337, 
                        input_parameters = [
                            pbshipping.models.parameter.Parameter(
                                name = '0', 
                                value = '0', )
                            ], 
                        special_service_id = '0', )
                    ], 
                surcharges = [
                    pbshipping.models.surcharge.Surcharge(
                        fee = 1.337, 
                        name = '0', )
                    ], 
                total_carrier_charge = 1.337, 
                total_tax_amount = 1.337
            )
        else :
            return Rate(
                carrier = 'USPS',
                parcel_type = 'FLAT',
        )

    def testRate(self):
        """Test Rate"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
