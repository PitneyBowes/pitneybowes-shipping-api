# coding: utf-8

"""
    Shipping API

    Shipping API Sample.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@pb.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import pbshipping
from pbshipping.models.parcel_protection_policy_response_policy_details import ParcelProtectionPolicyResponsePolicyDetails  # noqa: E501
from pbshipping.rest import ApiException

class TestParcelProtectionPolicyResponsePolicyDetails(unittest.TestCase):
    """ParcelProtectionPolicyResponsePolicyDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ParcelProtectionPolicyResponsePolicyDetails
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = pbshipping.models.parcel_protection_policy_response_policy_details.ParcelProtectionPolicyResponsePolicyDetails()  # noqa: E501
        if include_optional :
            return ParcelProtectionPolicyResponsePolicyDetails(
                policy_id = '0', 
                policy_date = '0', 
                policy_status = '0', 
                claim_status = '0', 
                claim_status_update_date = '0', 
                value_of_goods = 1.337, 
                insurance_value = 1.337, 
                premium_value = 1.337, 
                base_premium = 1.337, 
                technology_fee = 1.337, 
                currency_code = '0', 
                mail_class = '0', 
                mail_class_option = '0'
            )
        else :
            return ParcelProtectionPolicyResponsePolicyDetails(
        )

    def testParcelProtectionPolicyResponsePolicyDetails(self):
        """Test ParcelProtectionPolicyResponsePolicyDetails"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
