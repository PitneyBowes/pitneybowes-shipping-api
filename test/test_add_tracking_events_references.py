# coding: utf-8

"""
    Shipping API

    Shipping API Sample.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@pb.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import pbshipping
from pbshipping.models.add_tracking_events_references import AddTrackingEventsReferences  # noqa: E501
from pbshipping.rest import ApiException

class TestAddTrackingEventsReferences(unittest.TestCase):
    """AddTrackingEventsReferences unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AddTrackingEventsReferences
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = pbshipping.models.add_tracking_events_references.AddTrackingEventsReferences()  # noqa: E501
        if include_optional :
            return AddTrackingEventsReferences(
                reference_type = '0', 
                reference_value = '0', 
                events = [
                    pbshipping.models.add_tracking_events_events.AddTrackingEvents_events(
                        event_code = '0', 
                        carrier_event_code = '0', 
                        event_date = '0', 
                        event_time = '0', 
                        event_time_offset = '0', 
                        event_city = '0', 
                        event_state_or_province = '0', 
                        postal_code = '0', 
                        country = '0', )
                    ]
            )
        else :
            return AddTrackingEventsReferences(
        )

    def testAddTrackingEventsReferences(self):
        """Test AddTrackingEventsReferences"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
