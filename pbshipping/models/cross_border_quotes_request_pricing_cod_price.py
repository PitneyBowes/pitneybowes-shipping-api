# coding: utf-8

"""
    Shipping API

    Shipping API Sample.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@pb.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from pbshipping.configuration import Configuration


class CrossBorderQuotesRequestPricingCodPrice(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'price': 'int',
        'cod': 'str',
        'includes_duty': 'bool',
        'includes_taxes': 'bool'
    }

    attribute_map = {
        'price': 'price',
        'cod': 'cod',
        'includes_duty': 'includesDuty',
        'includes_taxes': 'includesTaxes'
    }

    def __init__(self, price=None, cod=None, includes_duty=None, includes_taxes=None, local_vars_configuration=None):  # noqa: E501
        """CrossBorderQuotesRequestPricingCodPrice - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._price = None
        self._cod = None
        self._includes_duty = None
        self._includes_taxes = None
        self.discriminator = None

        if price is not None:
            self.price = price
        if cod is not None:
            self.cod = cod
        if includes_duty is not None:
            self.includes_duty = includes_duty
        if includes_taxes is not None:
            self.includes_taxes = includes_taxes

    @property
    def price(self):
        """Gets the price of this CrossBorderQuotesRequestPricingCodPrice.  # noqa: E501


        :return: The price of this CrossBorderQuotesRequestPricingCodPrice.  # noqa: E501
        :rtype: int
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this CrossBorderQuotesRequestPricingCodPrice.


        :param price: The price of this CrossBorderQuotesRequestPricingCodPrice.  # noqa: E501
        :type: int
        """

        self._price = price

    @property
    def cod(self):
        """Gets the cod of this CrossBorderQuotesRequestPricingCodPrice.  # noqa: E501


        :return: The cod of this CrossBorderQuotesRequestPricingCodPrice.  # noqa: E501
        :rtype: str
        """
        return self._cod

    @cod.setter
    def cod(self, cod):
        """Sets the cod of this CrossBorderQuotesRequestPricingCodPrice.


        :param cod: The cod of this CrossBorderQuotesRequestPricingCodPrice.  # noqa: E501
        :type: str
        """

        self._cod = cod

    @property
    def includes_duty(self):
        """Gets the includes_duty of this CrossBorderQuotesRequestPricingCodPrice.  # noqa: E501


        :return: The includes_duty of this CrossBorderQuotesRequestPricingCodPrice.  # noqa: E501
        :rtype: bool
        """
        return self._includes_duty

    @includes_duty.setter
    def includes_duty(self, includes_duty):
        """Sets the includes_duty of this CrossBorderQuotesRequestPricingCodPrice.


        :param includes_duty: The includes_duty of this CrossBorderQuotesRequestPricingCodPrice.  # noqa: E501
        :type: bool
        """

        self._includes_duty = includes_duty

    @property
    def includes_taxes(self):
        """Gets the includes_taxes of this CrossBorderQuotesRequestPricingCodPrice.  # noqa: E501


        :return: The includes_taxes of this CrossBorderQuotesRequestPricingCodPrice.  # noqa: E501
        :rtype: bool
        """
        return self._includes_taxes

    @includes_taxes.setter
    def includes_taxes(self, includes_taxes):
        """Sets the includes_taxes of this CrossBorderQuotesRequestPricingCodPrice.


        :param includes_taxes: The includes_taxes of this CrossBorderQuotesRequestPricingCodPrice.  # noqa: E501
        :type: bool
        """

        self._includes_taxes = includes_taxes

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CrossBorderQuotesRequestPricingCodPrice):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, CrossBorderQuotesRequestPricingCodPrice):
            return True

        return self.to_dict() != other.to_dict()
