# coding: utf-8

"""
    Shipping API

    Shipping API Sample.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@pb.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from pbshipping.configuration import Configuration


class ParcelProtectionPolicyResponseShipmentDetails(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'shipment_date': 'str',
        'shipment_transaction_id': 'str',
        'shipment_id': 'str',
        'parcel_tracking_number': 'str',
        'carrier': 'str',
        'amount': 'str',
        'package_length': 'str',
        'package_width': 'str',
        'package_height': 'str',
        'weight': 'str',
        'zone': 'str'
    }

    attribute_map = {
        'shipment_date': 'shipmentDate',
        'shipment_transaction_id': 'shipmentTransactionId',
        'shipment_id': 'shipmentId',
        'parcel_tracking_number': 'parcelTrackingNumber',
        'carrier': 'carrier',
        'amount': 'amount',
        'package_length': 'packageLength',
        'package_width': 'packageWidth',
        'package_height': 'packageHeight',
        'weight': 'weight',
        'zone': 'zone'
    }

    def __init__(self, shipment_date=None, shipment_transaction_id=None, shipment_id=None, parcel_tracking_number=None, carrier=None, amount=None, package_length=None, package_width=None, package_height=None, weight=None, zone=None, local_vars_configuration=None):  # noqa: E501
        """ParcelProtectionPolicyResponseShipmentDetails - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._shipment_date = None
        self._shipment_transaction_id = None
        self._shipment_id = None
        self._parcel_tracking_number = None
        self._carrier = None
        self._amount = None
        self._package_length = None
        self._package_width = None
        self._package_height = None
        self._weight = None
        self._zone = None
        self.discriminator = None

        if shipment_date is not None:
            self.shipment_date = shipment_date
        if shipment_transaction_id is not None:
            self.shipment_transaction_id = shipment_transaction_id
        if shipment_id is not None:
            self.shipment_id = shipment_id
        if parcel_tracking_number is not None:
            self.parcel_tracking_number = parcel_tracking_number
        if carrier is not None:
            self.carrier = carrier
        if amount is not None:
            self.amount = amount
        if package_length is not None:
            self.package_length = package_length
        if package_width is not None:
            self.package_width = package_width
        if package_height is not None:
            self.package_height = package_height
        if weight is not None:
            self.weight = weight
        if zone is not None:
            self.zone = zone

    @property
    def shipment_date(self):
        """Gets the shipment_date of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501


        :return: The shipment_date of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :rtype: str
        """
        return self._shipment_date

    @shipment_date.setter
    def shipment_date(self, shipment_date):
        """Sets the shipment_date of this ParcelProtectionPolicyResponseShipmentDetails.


        :param shipment_date: The shipment_date of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :type: str
        """

        self._shipment_date = shipment_date

    @property
    def shipment_transaction_id(self):
        """Gets the shipment_transaction_id of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501


        :return: The shipment_transaction_id of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :rtype: str
        """
        return self._shipment_transaction_id

    @shipment_transaction_id.setter
    def shipment_transaction_id(self, shipment_transaction_id):
        """Sets the shipment_transaction_id of this ParcelProtectionPolicyResponseShipmentDetails.


        :param shipment_transaction_id: The shipment_transaction_id of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :type: str
        """

        self._shipment_transaction_id = shipment_transaction_id

    @property
    def shipment_id(self):
        """Gets the shipment_id of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501


        :return: The shipment_id of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :rtype: str
        """
        return self._shipment_id

    @shipment_id.setter
    def shipment_id(self, shipment_id):
        """Sets the shipment_id of this ParcelProtectionPolicyResponseShipmentDetails.


        :param shipment_id: The shipment_id of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :type: str
        """

        self._shipment_id = shipment_id

    @property
    def parcel_tracking_number(self):
        """Gets the parcel_tracking_number of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501


        :return: The parcel_tracking_number of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :rtype: str
        """
        return self._parcel_tracking_number

    @parcel_tracking_number.setter
    def parcel_tracking_number(self, parcel_tracking_number):
        """Sets the parcel_tracking_number of this ParcelProtectionPolicyResponseShipmentDetails.


        :param parcel_tracking_number: The parcel_tracking_number of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :type: str
        """

        self._parcel_tracking_number = parcel_tracking_number

    @property
    def carrier(self):
        """Gets the carrier of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501


        :return: The carrier of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :rtype: str
        """
        return self._carrier

    @carrier.setter
    def carrier(self, carrier):
        """Sets the carrier of this ParcelProtectionPolicyResponseShipmentDetails.


        :param carrier: The carrier of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :type: str
        """

        self._carrier = carrier

    @property
    def amount(self):
        """Gets the amount of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501


        :return: The amount of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :rtype: str
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this ParcelProtectionPolicyResponseShipmentDetails.


        :param amount: The amount of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :type: str
        """

        self._amount = amount

    @property
    def package_length(self):
        """Gets the package_length of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501


        :return: The package_length of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :rtype: str
        """
        return self._package_length

    @package_length.setter
    def package_length(self, package_length):
        """Sets the package_length of this ParcelProtectionPolicyResponseShipmentDetails.


        :param package_length: The package_length of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :type: str
        """

        self._package_length = package_length

    @property
    def package_width(self):
        """Gets the package_width of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501


        :return: The package_width of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :rtype: str
        """
        return self._package_width

    @package_width.setter
    def package_width(self, package_width):
        """Sets the package_width of this ParcelProtectionPolicyResponseShipmentDetails.


        :param package_width: The package_width of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :type: str
        """

        self._package_width = package_width

    @property
    def package_height(self):
        """Gets the package_height of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501


        :return: The package_height of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :rtype: str
        """
        return self._package_height

    @package_height.setter
    def package_height(self, package_height):
        """Sets the package_height of this ParcelProtectionPolicyResponseShipmentDetails.


        :param package_height: The package_height of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :type: str
        """

        self._package_height = package_height

    @property
    def weight(self):
        """Gets the weight of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501


        :return: The weight of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :rtype: str
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this ParcelProtectionPolicyResponseShipmentDetails.


        :param weight: The weight of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :type: str
        """

        self._weight = weight

    @property
    def zone(self):
        """Gets the zone of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501


        :return: The zone of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :rtype: str
        """
        return self._zone

    @zone.setter
    def zone(self, zone):
        """Sets the zone of this ParcelProtectionPolicyResponseShipmentDetails.


        :param zone: The zone of this ParcelProtectionPolicyResponseShipmentDetails.  # noqa: E501
        :type: str
        """

        self._zone = zone

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ParcelProtectionPolicyResponseShipmentDetails):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ParcelProtectionPolicyResponseShipmentDetails):
            return True

        return self.to_dict() != other.to_dict()
