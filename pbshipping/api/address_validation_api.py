# coding: utf-8

"""
    Shipping API

    Shipping API Sample.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@pb.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from pbshipping.api_client import ApiClient
from pbshipping.exceptions import (  # noqa: F401
    ApiTypeError,
    ApiValueError
)


class AddressValidationApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def verify_address(self, address, **kwargs):  # noqa: E501
        """Address validation  # noqa: E501

        Address validation verifies and cleanses postal addresses within the United States to help ensure packages are rated accurately and shipments arrive at their final destinations on time.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.verify_address(address, async_req=True)
        >>> result = thread.get()

        :param async_req bool: execute request asynchronously
        :param Address address: Address object that needs to be validated. (required)
        :param bool x_pb_unified_error_structure: Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs.
        :param bool minimal_address_validation: When set to true, the complete address (delivery line and last line) is validated but only the last line (city, state, and postal code) would be changed by the validation check.
        :param _preload_content: if False, the urllib3.HTTPResponse object will
                                 be returned without reading/decoding response
                                 data. Default is True.
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: Address
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        return self.verify_address_with_http_info(address, **kwargs)  # noqa: E501

    def verify_address_with_http_info(self, address, **kwargs):  # noqa: E501
        """Address validation  # noqa: E501

        Address validation verifies and cleanses postal addresses within the United States to help ensure packages are rated accurately and shipments arrive at their final destinations on time.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.verify_address_with_http_info(address, async_req=True)
        >>> result = thread.get()

        :param async_req bool: execute request asynchronously
        :param Address address: Address object that needs to be validated. (required)
        :param bool x_pb_unified_error_structure: Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs.
        :param bool minimal_address_validation: When set to true, the complete address (delivery line and last line) is validated but only the last line (city, state, and postal code) would be changed by the validation check.
        :param _return_http_data_only: response data without head status code
                                       and headers
        :param _preload_content: if False, the urllib3.HTTPResponse object will
                                 be returned without reading/decoding response
                                 data. Default is True.
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: tuple(Address, status_code(int), headers(HTTPHeaderDict))
                 If the method is called asynchronously,
                 returns the request thread.
        """

        local_var_params = locals()

        all_params = [
            'address',
            'x_pb_unified_error_structure',
            'minimal_address_validation'
        ]
        all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout'
            ]
        )

        for key, val in six.iteritems(local_var_params['kwargs']):
            if key not in all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method verify_address" % key
                )
            local_var_params[key] = val
        del local_var_params['kwargs']
        # verify the required parameter 'address' is set
        if self.api_client.client_side_validation and ('address' not in local_var_params or  # noqa: E501
                                                        local_var_params['address'] is None):  # noqa: E501
            raise ApiValueError("Missing the required parameter `address` when calling `verify_address`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'minimal_address_validation' in local_var_params and local_var_params['minimal_address_validation'] is not None:  # noqa: E501
            query_params.append(('minimalAddressValidation', local_var_params['minimal_address_validation']))  # noqa: E501

        header_params = {}
        if 'x_pb_unified_error_structure' in local_var_params:
            header_params['X-PB-UnifiedErrorStructure'] = local_var_params['x_pb_unified_error_structure']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        if 'address' in local_var_params:
            body_params = local_var_params['address']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['oAuth2ClientCredentials']  # noqa: E501

        return self.api_client.call_api(
            '/v1/addresses/verify', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='Address',  # noqa: E501
            auth_settings=auth_settings,
            async_req=local_var_params.get('async_req'),
            _return_http_data_only=local_var_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=local_var_params.get('_preload_content', True),
            _request_timeout=local_var_params.get('_request_timeout'),
            collection_formats=collection_formats)

    def verify_and_suggest_address(self, return_suggestions, address_verify_suggest, **kwargs):  # noqa: E501
        """Address Suggestion  # noqa: E501

        This operation returns suggested addresses. Use this if the [Address Validation API](https://shipping.pitneybowes.com/api/post-address-verify.html) call has returned an error.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.verify_and_suggest_address(return_suggestions, address_verify_suggest, async_req=True)
        >>> result = thread.get()

        :param async_req bool: execute request asynchronously
        :param str return_suggestions: To return suggested addresses, set this to true. (required)
        :param AddressVerifySuggest address_verify_suggest: Address object that needs to be validated. (required)
        :param bool x_pb_unified_error_structure: Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs.
        :param _preload_content: if False, the urllib3.HTTPResponse object will
                                 be returned without reading/decoding response
                                 data. Default is True.
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: AddressSuggestionResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        return self.verify_and_suggest_address_with_http_info(return_suggestions, address_verify_suggest, **kwargs)  # noqa: E501

    def verify_and_suggest_address_with_http_info(self, return_suggestions, address_verify_suggest, **kwargs):  # noqa: E501
        """Address Suggestion  # noqa: E501

        This operation returns suggested addresses. Use this if the [Address Validation API](https://shipping.pitneybowes.com/api/post-address-verify.html) call has returned an error.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.verify_and_suggest_address_with_http_info(return_suggestions, address_verify_suggest, async_req=True)
        >>> result = thread.get()

        :param async_req bool: execute request asynchronously
        :param str return_suggestions: To return suggested addresses, set this to true. (required)
        :param AddressVerifySuggest address_verify_suggest: Address object that needs to be validated. (required)
        :param bool x_pb_unified_error_structure: Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs.
        :param _return_http_data_only: response data without head status code
                                       and headers
        :param _preload_content: if False, the urllib3.HTTPResponse object will
                                 be returned without reading/decoding response
                                 data. Default is True.
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :return: tuple(AddressSuggestionResponse, status_code(int), headers(HTTPHeaderDict))
                 If the method is called asynchronously,
                 returns the request thread.
        """

        local_var_params = locals()

        all_params = [
            'return_suggestions',
            'address_verify_suggest',
            'x_pb_unified_error_structure'
        ]
        all_params.extend(
            [
                'async_req',
                '_return_http_data_only',
                '_preload_content',
                '_request_timeout'
            ]
        )

        for key, val in six.iteritems(local_var_params['kwargs']):
            if key not in all_params:
                raise ApiTypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method verify_and_suggest_address" % key
                )
            local_var_params[key] = val
        del local_var_params['kwargs']
        # verify the required parameter 'return_suggestions' is set
        if self.api_client.client_side_validation and ('return_suggestions' not in local_var_params or  # noqa: E501
                                                        local_var_params['return_suggestions'] is None):  # noqa: E501
            raise ApiValueError("Missing the required parameter `return_suggestions` when calling `verify_and_suggest_address`")  # noqa: E501
        # verify the required parameter 'address_verify_suggest' is set
        if self.api_client.client_side_validation and ('address_verify_suggest' not in local_var_params or  # noqa: E501
                                                        local_var_params['address_verify_suggest'] is None):  # noqa: E501
            raise ApiValueError("Missing the required parameter `address_verify_suggest` when calling `verify_and_suggest_address`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'return_suggestions' in local_var_params and local_var_params['return_suggestions'] is not None:  # noqa: E501
            query_params.append(('returnSuggestions', local_var_params['return_suggestions']))  # noqa: E501

        header_params = {}
        if 'x_pb_unified_error_structure' in local_var_params:
            header_params['X-PB-UnifiedErrorStructure'] = local_var_params['x_pb_unified_error_structure']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        if 'address_verify_suggest' in local_var_params:
            body_params = local_var_params['address_verify_suggest']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['oAuth2ClientCredentials']  # noqa: E501

        return self.api_client.call_api(
            '/v1/addresses/verify-suggest', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='AddressSuggestionResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=local_var_params.get('async_req'),
            _return_http_data_only=local_var_params.get('_return_http_data_only'),  # noqa: E501
            _preload_content=local_var_params.get('_preload_content', True),
            _request_timeout=local_var_params.get('_request_timeout'),
            collection_formats=collection_formats)
